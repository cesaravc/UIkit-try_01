{
  "name": "rollup-plugin-import-alias",
  "version": "1.0.3",
  "description": "Provides directory aliases for es2015 import statements",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Hedzer/rollup-plugin-import-alias.git"
  },
  "keywords": [
    "rollup",
    "alias",
    "import",
    "es2015"
  ],
  "author": {
    "name": "Hedzer Ferwerda",
    "email": "hedzer87@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Hedzer/rollup-plugin-import-alias/issues"
  },
  "homepage": "https://github.com/Hedzer/rollup-plugin-import-alias#readme",
  "readme": "Rollup Import Alias\r\n=========\r\n\r\nProvides directory aliases for es2015 import statements. \r\n\r\n## Installation\r\n\r\n  npm install rollup-plugin-import-alias --save-dev\r\n\r\n## Usage\r\n### In rollup.plugins\r\n```javascript\r\nvar importAlias = require('rollup-plugin-import-alias');\r\n\r\nimportAlias({\r\n    Paths: {\r\n        TypeChecks: '../Common/TypeChecks',\r\n\t    Framework: './V1.0/Framework'\t\t\t\t\t\r\n    },\r\n    Extensions: ['js']\r\n});\r\n```\r\n### In your modules\r\n```javascript\r\nimport isArray from 'TypeChecks/isArray';\r\n```\r\nThis import would actually look for file `../Common/TypeChecks/isArray`\r\n\r\n## So? Why Care\r\nAs I've worked more with ES2015 import statements I've noticed absolute paths being used to avoid \"import hell\".  This is great, but creates issues when copying files into other subdirectories that would break those paths.  With this super simple utility those absolute paths can be correctly re-mapped. \r\n",
  "readmeFilename": "README.md",
  "_id": "rollup-plugin-import-alias@1.0.3",
  "dist": {
    "shasum": "d9d4b6e712277d8cd91fa4330d7f05dfde0d134a"
  },
  "_from": "rollup-plugin-import-alias@^1.0.3",
  "_resolved": "https://registry.npmjs.org/rollup-plugin-import-alias/-/rollup-plugin-import-alias-1.0.3.tgz"
}
